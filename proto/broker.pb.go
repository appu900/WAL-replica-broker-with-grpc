// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: broker.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessagePublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicName     string                 `protobuf:"bytes,1,opt,name=topicName,proto3" json:"topicName,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagePublishRequest) Reset() {
	*x = MessagePublishRequest{}
	mi := &file_broker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagePublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePublishRequest) ProtoMessage() {}

func (x *MessagePublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePublishRequest.ProtoReflect.Descriptor instead.
func (*MessagePublishRequest) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{0}
}

func (x *MessagePublishRequest) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *MessagePublishRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *MessagePublishRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type MessagePublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message_ID    string                 `protobuf:"bytes,1,opt,name=message_ID,json=messageID,proto3" json:"message_ID,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagePublishResponse) Reset() {
	*x = MessagePublishResponse{}
	mi := &file_broker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagePublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePublishResponse) ProtoMessage() {}

func (x *MessagePublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePublishResponse.ProtoReflect.Descriptor instead.
func (*MessagePublishResponse) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{1}
}

func (x *MessagePublishResponse) GetMessage_ID() string {
	if x != nil {
		return x.Message_ID
	}
	return ""
}

func (x *MessagePublishResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MessagePublishResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type MessageConsumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicName     string                 `protobuf:"bytes,1,opt,name=topicName,proto3" json:"topicName,omitempty"`
	ConsumerGroup string                 `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageConsumeRequest) Reset() {
	*x = MessageConsumeRequest{}
	mi := &file_broker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageConsumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageConsumeRequest) ProtoMessage() {}

func (x *MessageConsumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageConsumeRequest.ProtoReflect.Descriptor instead.
func (*MessageConsumeRequest) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{2}
}

func (x *MessageConsumeRequest) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *MessageConsumeRequest) GetConsumerGroup() string {
	if x != nil {
		return x.ConsumerGroup
	}
	return ""
}

type MessageConsumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message_ID    string                 `protobuf:"bytes,1,opt,name=message_ID,json=messageID,proto3" json:"message_ID,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageConsumeResponse) Reset() {
	*x = MessageConsumeResponse{}
	mi := &file_broker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageConsumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageConsumeResponse) ProtoMessage() {}

func (x *MessageConsumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageConsumeResponse.ProtoReflect.Descriptor instead.
func (*MessageConsumeResponse) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{3}
}

func (x *MessageConsumeResponse) GetMessage_ID() string {
	if x != nil {
		return x.Message_ID
	}
	return ""
}

func (x *MessageConsumeResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *MessageConsumeResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *MessageConsumeResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_broker_proto protoreflect.FileDescriptor

const file_broker_proto_rawDesc = "" +
	"\n" +
	"\fbroker.proto\x12\x06broker\"\xd1\x01\n" +
	"\x15MessagePublishRequest\x12\x1c\n" +
	"\ttopicName\x18\x01 \x01(\tR\ttopicName\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x12D\n" +
	"\aheaders\x18\x03 \x03(\v2*.broker.MessagePublishRequest.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"g\n" +
	"\x16MessagePublishResponse\x12\x1d\n" +
	"\n" +
	"message_ID\x18\x01 \x01(\tR\tmessageID\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\\\n" +
	"\x15MessageConsumeRequest\x12\x1c\n" +
	"\ttopicName\x18\x01 \x01(\tR\ttopicName\x12%\n" +
	"\x0econsumer_group\x18\x02 \x01(\tR\rconsumerGroup\"\xf2\x01\n" +
	"\x16MessageConsumeResponse\x12\x1d\n" +
	"\n" +
	"message_ID\x18\x01 \x01(\tR\tmessageID\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x12E\n" +
	"\aheaders\x18\x03 \x03(\v2+.broker.MessageConsumeResponse.HeadersEntryR\aheaders\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xb3\x01\n" +
	"\rMessageBroker\x12O\n" +
	"\x0ePublishMessage\x12\x1d.broker.MessagePublishRequest\x1a\x1e.broker.MessagePublishResponse\x12Q\n" +
	"\x0eConsumeMessage\x12\x1d.broker.MessageConsumeRequest\x1a\x1e.broker.MessageConsumeResponse0\x01B\x04Z\x02./b\x06proto3"

var (
	file_broker_proto_rawDescOnce sync.Once
	file_broker_proto_rawDescData []byte
)

func file_broker_proto_rawDescGZIP() []byte {
	file_broker_proto_rawDescOnce.Do(func() {
		file_broker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_broker_proto_rawDesc), len(file_broker_proto_rawDesc)))
	})
	return file_broker_proto_rawDescData
}

var file_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_broker_proto_goTypes = []any{
	(*MessagePublishRequest)(nil),  // 0: broker.MessagePublishRequest
	(*MessagePublishResponse)(nil), // 1: broker.MessagePublishResponse
	(*MessageConsumeRequest)(nil),  // 2: broker.MessageConsumeRequest
	(*MessageConsumeResponse)(nil), // 3: broker.MessageConsumeResponse
	nil,                            // 4: broker.MessagePublishRequest.HeadersEntry
	nil,                            // 5: broker.MessageConsumeResponse.HeadersEntry
}
var file_broker_proto_depIdxs = []int32{
	4, // 0: broker.MessagePublishRequest.headers:type_name -> broker.MessagePublishRequest.HeadersEntry
	5, // 1: broker.MessageConsumeResponse.headers:type_name -> broker.MessageConsumeResponse.HeadersEntry
	0, // 2: broker.MessageBroker.PublishMessage:input_type -> broker.MessagePublishRequest
	2, // 3: broker.MessageBroker.ConsumeMessage:input_type -> broker.MessageConsumeRequest
	1, // 4: broker.MessageBroker.PublishMessage:output_type -> broker.MessagePublishResponse
	3, // 5: broker.MessageBroker.ConsumeMessage:output_type -> broker.MessageConsumeResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_broker_proto_init() }
func file_broker_proto_init() {
	if File_broker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_broker_proto_rawDesc), len(file_broker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_broker_proto_goTypes,
		DependencyIndexes: file_broker_proto_depIdxs,
		MessageInfos:      file_broker_proto_msgTypes,
	}.Build()
	File_broker_proto = out.File
	file_broker_proto_goTypes = nil
	file_broker_proto_depIdxs = nil
}
